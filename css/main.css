/* COMMON */
.body__container {
    font-family: 'Roboto', sans-serif;
    font-size: 16px;
    font-weight:400;
    color: #333;
}

a {
    /* 텍스트에 줄을 넣을지 선택하는 속성 */
    text-decoration: none;
}

/* BTN */
.btn {
    height: 34px;
    background: #eee linear-gradient(to bottom, #fcfcfc, #eee);
    border: 1px solid #d5d5d5;
    border-radius: 4px;
    display: inline-flex;
    align-items: center;
    padding: 0 12px;
    font-size: 14px;
    font-weight: 500;
    line-height: 1.5;
    cursor: pointer;
    box-sizing: border-box;
    position: relative;
    color: #333;
}

.btn:hover::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.07);
}

.btn.btn--primary {
    border: 1px solid #65b836;
    color: #fff;
    background: #55a532 linear-gradient(#91dd70, #55ae2e);
}

/* INPUT TEXT */
.input--text  {
    height: 34px;
    padding: 0 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    box-sizing: border-box;
    outline: none;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075);
    font-size: 16px;
}
.input--text:focus {
    border-color: #51a7e8;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075),
                0 0 5px rgba(81, 167, 232, 0.5);
}
.input--text::-webkit-input-placeholder {
    color: #cacaca;
}
.input--text::-ms-input-placeholder {
    color: #cacaca;
}
.input--text::-moz-input-placeholder {
    color: #cacaca;
}

/* FLOAT CLEARFIX */
/* 좌우 분할 (float)*/
.clearfix::after {
    content: "";
    clear: both;
    display: block;
}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

/* SUMMARY */
.summary {

}

.summary__title {
    font-size: 38px;
    font-weight: 300;
    line-height: 1.25;
    margin-bottom: 18px;
}

.summary__description {
    font-size: 26px;
    font-weight: 300;
    color: #767676;
    line-height: 1.5;
}

/* SECTION & INNER */
.section {
    /* 포지션이 없는 경우 부모요소에 적용. 내부 요소에서 absolute 사용할 수도 있기 때문 */
    position: relative;
}

.section .inner {
    max-width: 980px;
    /* 가운데 정렬 */
    margin: 0 auto;
    /* 패딩을 넣었을 때 요소가 커지지 않게 방지 */
    box-sizing: border-box;
    /* 포지션이 없는 경우 부모요소에 적용. 내부 요소에서 absolute 사용할 수도 있기 때문 */
    position: relative;
}

/* HEADER */
header {
    border-bottom: 1px solid rgba(0, 0, 0, 0.75);
    box-shadow: 0 0 5px rgba(0, 0, 0, .75);
    background: #FFF;
}

header .inner {
    height: 78px;
}

header .menu-group {
    /* 항목 수평 정렬 */
    display: flex;
    /* 헤더 안에 수직 정렬. display: flex 인 경우만 사용가능. height: 100%도 설정 해줘야 함.*/
    align-items: center;
    height: 100%;
}

header .logo {
    margin-right: 10px;
}

header .logo a {
    background: url("../img/logo.svg");
    width: 32px;
    height: 32px;
    /* a 태그는 inline 요소라서 범위 설정이 불가능하기 때문에 block으로 바꿔줌 */
    display: block;
    /* 들여쓰기 하는 속성. img 태그가 아니라 background 속성으로 이미지를 입혔기 때문에,
    대체 텍스트 가릴때 사용 */
    text-indent: -9999px;
}

header .logo a:hover {
    background: url("../img/logo_on.svg");
}

header .main-menu {
    display: flex;
}

header .main-menu li a {
    /* a 태그는 inline 요소이기 때문에 공간 설정 불가능하기 때문에 block으로 바꿔줌 */
    display: block;
    /* margin 대신 padding을 쓰는 이유: 클릭하기 편하게 공간 확보 */
    padding: 10px;
    color: #3c4146;
}

header .main-menu li a:hover {
    color: #4078c5;
}

header .sign-group {
    display: flex;
    height: 100%;
    align-items: center;
}

header .btn-group {
    /* 화면에 표시되는 순서 바꾸기 */
    order: 2;
    display: flex;
}

header .btn-group .sign-in {
    margin-right: 4px;
}

#search-form {
    order: 1;
    margin-right: 12px;
}

#search {
    width: 160px;
    font-size: 14px;
}

/* search id 의 형제요소 중 type이 submit 인 선택자. submit 버튼 지우기. */
#search + [type="submit"] {
    display: none;
}

header .sub-menu {
    display: flex;
    margin-right: 10px;    
}

header .sub-menu li a {
    padding: 8px;
    display: block;
    font-size: 13px;
    color: #3c4146;
}

header .sub-menu li a:hover {
    color: #4078c5;
}

/* VISUAL */
.section--visual {
    /* position 값이 없지만 동시 적용되는 클래스인 section 클래스에 position이 적용돼 있다. */
    background-image: url(../img/bg.jpg);
    background-repeat: no-repeat;
    background-position: bottom left;
    /* 확대/축소를 하더라도 배경 이미지가 섹션 전체를 덮도록 함 */
    background-size: cover;
}

/* 배경 앞에 반투명 창을 띄워서 배경을 어둡게 만들기 */
.section--visual::before {
    content: "";
    /* 부모요소에 position 값이 있는지 확인 */
    position: absolute;
    top: 0;
    left: 0;
    /*  right: 0; bottom: 0; 으로 해도 같은 효과가 있다. */
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .3);
}

.section--visual .summary {
    /* 단축속성으로 flex: 1; 과 같음. 수평정렬 했을때 비율 맞추기 */
    flex-grow: 1;
    flex-basis: 0;
    margin-right: 90px;
}

.section--visual .inner {
    padding: 160px 0;
    display: flex;
}

.section--visual .summary__title {
    color: #FFF;
    font-size: 54px;
    /* 그림자 추가 (x, y, blur, rgba)*/
    text-shadow: 0 1px 1px rgba(0,0,0, .25), 
                 0 1px 25px rgba(0, 0, 0, .75);
}

.section--visual .summary__description {
    color: #FFF;
    /* 그림자 추가 (x, y, blur, rgba)*/
    text-shadow: 0 1px 1px rgba(0,0,0, .25), 
                 0 1px 25px rgba(0, 0, 0, .75);
}

#sign-form {
     width: 340px;
     margin-top: 16px;
}

#sign-form li {
    margin-bottom: 17px;
}

#sign-form li:last-child {
    margin-bottom: 0;
}

#sign-form .input--text {
    width: 100%;
    height: 40px;
}

#sign-form .caption {
    font-size: 12px;
    margin-top: 5px;
    color: rgba(255, 255, 255, .6);
    line-height: 1.5;
    text-align: center;
}

#sign-form [type="submit"] {
    width: 100%;
    height: 62px;
    padding: 0 25px;
    font-size: 20px;
    /* text-align: center 로 가운데 정렬이 안됨. btn 클래스의 display: inline-flex 를 수평 정렬 하려면 justify-content 사용해야 함.*/
    justify-content: center;
}

/* FEATURE */
/* inner를 넣지 않음 어차피 각자 요소마다 가운데 정렬을 따로 해줘야 하기 때문 */
.section--feature {
    background: #f5f5f5;
    padding-top: 66px;
}

.section--feature .summary {
    /* margin: 0 auto 하려면 width 가 정의돼 있어야 하고, 반응형으로 만들기 위해 max-width 속성 이용 */
    max-width: 820px;
    margin: 0 auto;
    text-align: center;
}

.section--feature .video {
    max-width: 650px;
    margin: 50px auto;
}

.section--feature .video .video-ratio {
    /* 16:9 비율 설정할때 padding-top 은 부모 요소의 width 에 영향을 받기 때문에 padding-top에 퍼센트 적용하고 height: 0으로 설정*/
    height: 0;
    padding-top: 56.25%;
    position: relative;
}

.section--feature .video .video-ratio iframe {
    /* video-ratio 설정 할 때 패딩을 썼기 때문에 position: absolute를 통해 자리를 잡아줘야 한다. */
    position: absolute;
    top: 10px;
    left: 0;
    /* 부모 요소의 최대 넓이, 높이 */
    width: 100%;
    height: 100%;
}

.section--feature .tiles {
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
}

.section--feature .tiles .inner{
    max-width: 1200px;
}

.section--feature .tiles ul {
    /* li 항목들을 반응형으로 만들기 위해 Grid 사용(하고싶지만 모던한 기술이기 때문에 구형 브라우저에서 사용불가 그래서 float 사용) */
    /* display: grid; */
    /* grid-template-columns: repeat(4, 1fr); */
}

.section--feature .tiles li {
    padding: 34px 24px;
    text-align: center;
    line-height: 1.5;
    /* 요소의 오른쪽에 선긋기 */
    border-right: 1px solid #e5e5e5;
    box-sizing: border-box;
    /* 4개의 컬럼으로 수평정렬. box-sizing: border-box 가 없다면 border-right의 사이즈를 적용받을 수 있음. */
    float: left;
    width: 25%;
}

.section--feature .tiles li:last-child {
    /* 마지막 요소의 오른쪽에는 선 지우기 */
    border-right: none;
}

.section--feature .tiles li img {
    /* 반응형 이미지를 위한 속성 */
    max-width: 100%;
    /* 패딩에 값 3개 적으면 위, 좌우, 아래 */
    padding: 14px 10% 24px;
    /* 요소가 패딩때문에 커져서 넘치지 않도록 방지 */
    box-sizing: border-box;
}

.section--feature .tiles li h3 {
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 10px;
}

.section--feature .tiles li p {
    font-size: 14px;
    color: #767676;
}